import getLang from "./languages";

const locales = {
  en: {
    isDefault: true,
    start: `üëã Hello! I'm a translator bot ü§ñ!
I serve people üë®‚Äçüë©‚Äçüë¶‚Äçüë¶.
Write something ‚úçÔ∏è.
I will translate it into another language üìì`,
    help: `How can I help you man?
I can translate into another language what you write.
I was programmed for this by my creator üë®‚Äçüíª.

Here are the commands I am running:
    <code>/to     </code> - you can choose the language to translate into
    <code>/from   </code> - you can choose the language from which to translate *
    <code>/to en  </code> - I will translate into this language
    <code>/from ru</code> - I will translate from this language
    <code>/tomy   </code> - I will translate into your native language
    <code>/frommy </code> - I will translate from your native language
    <code>/swap   </code> - I will swap languages
    <code>/lang   </code> - you can see all the languages I know

* I'm smart ü§ñ I can guess what language you want to translate the phrase from. I will inform you about it.
    `,
    toSet: "üëå Now I will translate into this language:",
    fromSet: "üëç Now I will translate from this language:",
    unknown: "Language isn't supported:",
    noTranslate:
      "ü§∑‚Äç‚ôÇÔ∏è I'm very embarrassed... I haven't learned this language yet:",
    selectToLangButton: "Translate to üëâ",
    selectFromLangButton: "Translate from üëà",
    changeFromLangButton: "‚úÖ Yes, translate from it! ",
    selectToLang: "üëá Choose which language I want to translate into",
    selectFromLang: "üëá Choose which language I want to translate from",
    to: "üëâ",
    from: "üëà",
    langCorrected: "By the way, I guessed ü§ü what language you write in:",
    changeProposal: "Let me translate from this language?",
    textCorrected: "I found some typos here:",
    lang: getLang("en"),
    cancel: "‚úñÔ∏è cancel",
    canceled: "As you wish ü§ñ",
    commands: {
      toLang: "Translate to native language",
      fromLang: "Translate from native language",
      to: "Select the language to translate into",
      from: "Select the language to translate from",
      swap: "Swap languages",
      lang: "Look at the languages   I know",
      help: "I'll help in any way I can",
    },
  },
  ru: {
    start: `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ ü§ñ!
–Ø —Å–ª—É–∂—É —á–µ–ª–æ–≤–µ–∫–∞–º üë®‚Äçüë©‚Äçüë¶‚Äçüë¶.
–ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å ‚úçÔ∏è.
–Ø –ø–µ—Ä–µ–≤–µ–¥—É —ç—Ç–æ –Ω–∞ –¥—Ä—É–≥–æ–π —è–∑—ã–∫ üìì`,
    help: `–ß–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å, —á–µ–ª–æ–≤–µ–∫‚ùì
–Ø –º–æ–≥—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –¥—Ä—É–≥–æ–π —è–∑—ã–∫ —Ç–æ —á—Ç–æ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å.
–ú–µ–Ω—è –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å üë®‚Äçüíª.

<b>–í–æ—Ç –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ —è –∏—Å–ø–æ–ª–Ω—è—é</b>:
    <code>/to     </code> - –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å
    <code>/from   </code> - –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å *
    <code>/to ru  </code> - —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç —è–∑—ã–∫
    <code>/from ru</code> - —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —ç—Ç–æ–≥–æ —è–∑—ã–∫–∞
    <code>/tomy   </code> - —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —Ç–≤–æ–π —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫
    <code>/frommy </code> - —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —Ç–≤–æ–µ–≥–æ —Ä–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞
    <code>/swap   </code> - —è –ø–æ–º–µ–Ω—è—é —è–∑—ã–∫–∏ –º–µ—Å—Ç–∞–º–∏
    <code>/lang   </code> - —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —è–∑—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —è –∑–Ω–∞—é

* –Ø —É–º–Ω—ã–π ü§ñ –Ø –º–æ–≥—É —Å–∞–º –¥–æ–≥–∞–¥–∞—Ç—å—Å—è, —Å –∫–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ —Ç—ã —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ñ—Ä–∞–∑—É. –Ø —Å–æ–æ–±—â—É —Ç–µ–±–µ –æ–± —ç—Ç–æ–º.
    `,
    toSet: "üëå –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç —è–∑—ã–∫:",
    fromSet: "üëç –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —ç—Ç–æ–≥–æ —è–∑—ã–∫–∞:",
    unknown: "ü§∑‚Äç‚ôÇÔ∏è –ú–Ω–µ –æ—á–µ–Ω—å –Ω–µ–ª–æ–≤–∫–æ... –Ø –µ—â–µ –Ω–µ –≤—ã—É—á–∏–ª —ç—Ç–æ—Ç —è–∑—ã–∫:",
    noTranslate:
      "üò± –û–π. –ß—Ç–æ-—Ç–æ —Å –º–æ–∏–º–∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ —Å—Ö–µ–º–∞–º–∏!  –Ø –Ω–µ–º–Ω–æ–≥–æ —Å–ª–æ–º–∞–ª—Å—è...",
    selectToLangButton: "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ üëâ",
    selectFromLangButton: "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å üëà",
    changeFromLangButton: "‚úÖ –î–∞, –ø–µ—Ä–µ–≤–æ–¥–∏ —Å –Ω–µ–≥–æ!",
    selectToLang: "üëá –í—ã–±–µ—Ä–∏, –Ω–∞ –∫–∞–∫–æ–π —è–∑—ã–∫ –º–Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å",
    selectFromLang: "üëá –í—ã–±–µ—Ä–∏, —Å –∫–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ –º–Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å",
    to: "üëâ",
    from: "üëà",
    langCorrected: "–ö—Å—Ç–∞—Ç–∏, —è –¥–æ–≥–∞–¥–∞–ª—Å—è ü§ü –Ω–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ —Ç—ã –ø–∏—à–µ—à—å:",
    changeProposal: "–î–∞–≤–∞–π –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —ç—Ç–æ–≥–æ —è–∑—ã–∫–∞?",
    textCorrected: "–•–º–º... üëÄ –Ø —Ç—É—Ç –æ–±–Ω–∞—Ä—É–∂–∏–ª —É —Ç–µ–±—è –æ–ø–µ—á–∞—Ç–∫–∏:",
    lang: getLang("ru"),
    cancel: "‚úñÔ∏è –æ—Ç–º–µ–Ω–∏—Ç—å",
    canceled: "–ö–∞–∫ –ø–æ–∂–µ–ª–∞–µ—à—å ü§ñ",
    commands: {
      toLang: "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫",
      fromLang: "–ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å —Ä–æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞",
      to: "–í—ã–±–µ—Ä–∏ —è–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å",
      from: "–í—ã–±–µ—Ä–∏ —è–∑—ã–∫, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å",
      swap: "–ú–µ–Ω—è—é —è–∑—ã–∫–∏ –º–µ—Å—Ç–∞–º–∏",
      lang: "–ü–æ—Å–º–æ—Ç—Ä–∏ —è–∑—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —è –∑–Ω–∞—é",
      help: "–ü–æ–º–æ–≥—É, —á–µ–º —Å–º–æ–≥—É",
    },
  },
};

export default locales;
